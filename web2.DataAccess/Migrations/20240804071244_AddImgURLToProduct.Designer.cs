// <auto-generated />
using Book_web2.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Book_web2.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240804071244_AddImgURLToProduct")]
    partial class AddImgURLToProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Book_web2.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisPlayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisPlayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisPlayOrder = 2,
                            Name = "Humor"
                        },
                        new
                        {
                            Id = 3,
                            DisPlayOrder = 3,
                            Name = "Romatic"
                        });
                });

            modelBuilder.Entity("Book_web2.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImgURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Billy Spark",
                            CategoryId = 1,
                            Description = "Praesent vitae .................",
                            ISBN = "SWD9999001",
                            ImgURL = "",
                            ListPrice = 99.0,
                            Price = 90.0,
                            Price100 = 80.0,
                            Price50 = 85.0,
                            Title = "Fortune of Time"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Samantha Wood",
                            CategoryId = 1,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit...",
                            ISBN = "SWD9999002",
                            ImgURL = "",
                            ListPrice = 120.0,
                            Price = 110.0,
                            Price100 = 100.0,
                            Price50 = 105.0,
                            Title = "Mystery of the East"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Michael Johnson",
                            CategoryId = 2,
                            Description = "Suspendisse potenti. Nullam ac tortor vitae purus...",
                            ISBN = "SWD9999003",
                            ImgURL = "",
                            ListPrice = 150.0,
                            Price = 140.0,
                            Price100 = 130.0,
                            Price50 = 135.0,
                            Title = "Journey to the West"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Isabella Clark",
                            CategoryId = 2,
                            Description = "Pellentesque habitant morbi tristique senectus...",
                            ISBN = "SWD9999004",
                            ImgURL = "",
                            ListPrice = 80.0,
                            Price = 70.0,
                            Price100 = 60.0,
                            Price50 = 65.0,
                            Title = "Secrets of the North"
                        },
                        new
                        {
                            Id = 5,
                            Author = "William Turner",
                            CategoryId = 2,
                            Description = "Etiam sit amet nisl purus in mollis nunc sed id...",
                            ISBN = "SWD9999005",
                            ImgURL = "",
                            ListPrice = 95.0,
                            Price = 85.0,
                            Price100 = 75.0,
                            Price50 = 80.0,
                            Title = "Legends of the South"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Emily Davis",
                            CategoryId = 3,
                            Description = "Vestibulum ante ipsum primis in faucibus orci luctus...",
                            ISBN = "SWD9999006",
                            ImgURL = "",
                            ListPrice = 110.0,
                            Price = 100.0,
                            Price100 = 90.0,
                            Price50 = 95.0,
                            Title = "Whispers of the Wind"
                        });
                });

            modelBuilder.Entity("Book_web2.Models.Product", b =>
                {
                    b.HasOne("Book_web2.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
